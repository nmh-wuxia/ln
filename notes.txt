Light Novel Translation Design

TODO: Fix compile errors

Publisher
  (Note: Depends on Chapter)
  (Note: Uses R2 + DO Storage)
	publish_story (title)
		X create & store story metadata 
		X store story metadata (chapter list)
  publish_chapter (english_chapter)
		X Store the translated chapter
		X Update the story metadata (chapter list) with new chapter (title, links to render)
		Render the translated chapter to html and store render.
	publish_chapter (raw_chapter)
		Store the raw chapter
		Queue the chapter up for translation
		Retrieve the translated chapter
		Store the translated chapter
		Render the translated chapter to html and store render.
		Update the story metadata (chapter list) with new chapter (title, links to render)
Story
	list_chapters ()
		(titles, links, when_free)
Chapter
  (Note: Uses R2 + DO storage)
	X is_free (now)
		is the chapter free now?
	X update
		lock the chapter
		store the new chapter text with an incremented version
		re-render the new chapter text with an incremented version & store
		unlock the chapter
  X text (version)
    return chapter text at a given version.
User
  (Note: Depends on Stripe integration and Chapter)
  (Note: Uses DO storage)
	X has_credits()
		user.credits
	X add_credits()
		credits = payment_flow()
		user.credits += credits
	X own(chapter)
		user.owns(chapter)?
		user.has_credits(chapter.cost())? payment_flow();
		user.has_credits?
		user.credits -= chapter.cost()
		user.owns += chapter
	X owns(now, chapter)
		user.owns(chapter)?
		chapter.is_free(now)?
		false
  X payment_flow()
    (Note: mocked)
    contact stripe for payment flow
    return credits added to account
